<?php
/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: https://cryptoschool.ai/test-security-logging.php
 * 
 * @package CryptoSchool
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º WordPress
require_once __DIR__ . '/wp-config.php';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
if (!current_user_can('manage_options')) {
    wp_die('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.');
}

echo "<h1>üîç –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è</h1>\n";

// –û—á–∏—â–∞–µ–º –∫–µ—à —Ç—Ä–∞–Ω–∑–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
$current_user_id = get_current_user_id();
$cache_key = 'admin_access_logged_' . $current_user_id;
delete_transient($cache_key);
echo "<p>‚úÖ –ö–µ—à –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –æ—á–∏—â–µ–Ω</p>\n";

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
if (class_exists('CryptoSchool_Security_Logger')) {
    echo "<h2>üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è</h2>\n";
    
    // –¢–µ—Å—Ç 1: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞
    CryptoSchool_Security_Logger::log(
        'auth',
        'test_login',
        'Test login event from optimization script',
        CryptoSchool_Security_Logger::LEVEL_INFO,
        ['test' => true, 'script' => 'test-security-logging.php']
    );
    echo "<p>‚úÖ –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω</p>\n";
    
    // –¢–µ—Å—Ç 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≥—Ä–æ–∑—ã
    CryptoSchool_Security_Logger::log(
        'threats',
        'test_threat',
        'Test security threat from optimization script',
        CryptoSchool_Security_Logger::LEVEL_WARNING,
        ['test' => true, 'threat_type' => 'test']
    );
    echo "<p>‚úÖ –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É–≥—Ä–æ–∑—ã –≤—ã–ø–æ–ª–Ω–µ–Ω</p>\n";
    
    // –¢–µ—Å—Ç 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
    CryptoSchool_Security_Logger::log(
        'access',
        'test_access',
        'Test admin access from optimization script',
        CryptoSchool_Security_Logger::LEVEL_INFO,
        ['test' => true, 'access_type' => 'test']
    );
    echo "<p>‚úÖ –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω</p>\n";
    
} else {
    echo "<p>‚ùå –ö–ª–∞—Å—Å CryptoSchool_Security_Logger –Ω–µ –Ω–∞–π–¥–µ–Ω</p>\n";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "<h2>üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤</h2>\n";

$today = date('Y-m-d');
$log_dir = WP_CONTENT_DIR . '/security-logs';

$expected_files = [
    "auth/test_login-{$today}.log",
    "threats/test_threat-{$today}.log", 
    "access/test_access-{$today}.log"
];

foreach ($expected_files as $file) {
    $filepath = $log_dir . '/' . $file;
    if (file_exists($filepath)) {
        $size = filesize($filepath);
        echo "<p>‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: <code>{$file}</code> ({$size} –±–∞–π—Ç)</p>\n";
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
        $content = file_get_contents($filepath);
        $lines = explode("\n", trim($content));
        $last_line = end($lines);
        if ($last_line) {
            echo "<p style='background: #f0f0f0; padding: 10px; font-family: monospace; font-size: 12px;'>{$last_line}</p>\n";
        }
    } else {
        echo "<p>‚ùå –§–∞–π–ª –ù–ï —Å–æ–∑–¥–∞–Ω: <code>{$file}</code></p>\n";
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
echo "<h2>üìä –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</h2>\n";

if (class_exists('CryptoSchool_Security_Logger')) {
    try {
        $stats = CryptoSchool_Security_Logger::get_log_statistics(1);
        echo "<p>‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:</p>\n";
        echo "<ul>\n";
        echo "<li>–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {$stats['total_events']}</li>\n";
        echo "<li>–ü–æ —É—Ä–æ–≤–Ω—è–º: " . json_encode($stats['by_level']) . "</li>\n";
        echo "<li>–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º: " . json_encode($stats['by_category']) . "</li>\n";
        echo "<li>–¢–æ–ø IP: " . count($stats['top_ips']) . " –∞–¥—Ä–µ—Å–æ–≤</li>\n";
        echo "<li>–£–≥—Ä–æ–∑—ã: " . count($stats['recent_threats']) . " —Å–æ–±—ã—Ç–∏–π</li>\n";
        echo "</ul>\n";
    } catch (Exception $e) {
        echo "<p>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: " . $e->getMessage() . "</p>\n";
    }
} else {
    echo "<p>‚ùå –ö–ª–∞—Å—Å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>\n";
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–∫–∏ –ª–æ–≥–æ–≤
echo "<h2>üóÇÔ∏è –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–æ–≥–æ–≤</h2>\n";

function show_directory_tree($dir, $prefix = '') {
    if (!is_dir($dir)) {
        return;
    }
    
    $files = scandir($dir);
    foreach ($files as $file) {
        if ($file === '.' || $file === '..') {
            continue;
        }
        
        $filepath = $dir . '/' . $file;
        if (is_dir($filepath)) {
            echo "<p>{$prefix}üìÅ {$file}/</p>\n";
            show_directory_tree($filepath, $prefix . '&nbsp;&nbsp;&nbsp;&nbsp;');
        } else {
            $size = filesize($filepath);
            $modified = date('Y-m-d H:i:s', filemtime($filepath));
            echo "<p>{$prefix}üìÑ {$file} ({$size} –±–∞–π—Ç, {$modified})</p>\n";
        }
    }
}

show_directory_tree($log_dir);

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo "<h2>üêõ Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>\n";

$debug_file = $log_dir . '/debug-security-logger.log';
if (file_exists($debug_file)) {
    $debug_content = file_get_contents($debug_file);
    echo "<p>‚úÖ Debug —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω:</p>\n";
    echo "<pre style='background: #f0f0f0; padding: 15px; overflow-x: auto; font-size: 12px;'>";
    echo htmlspecialchars($debug_content);
    echo "</pre>\n";
} else {
    echo "<p>‚ùå Debug —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: <code>{$debug_file}</code></p>\n";
}

echo "<h2>‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ</h2>\n";
echo "<p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong></p>\n";
echo "<ul>\n";
echo "<li>–ï—Å–ª–∏ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ (–±–µ–∑ timestamp) - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç</li>\n";
echo "<li>–ú–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å timestamp –≤—Ä—É—á–Ω—É—é</li>\n";
echo "<li>–ù–æ–≤—ã–µ –ª–æ–≥–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</li>\n";
echo "<li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã—à–µ —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –æ—Ç–∫—É–¥–∞ –±–µ—Ä–µ—Ç—Å—è timestamp</li>\n";
echo "</ul>\n";

echo "<p><a href='/wp-admin/'>‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω–∫—É</a></p>\n";
